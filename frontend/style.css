/* 
mobile first media query
should be rem

My inital non-media query styles should be mobile first

Margins should be rem

Minimum tap size of 44px * 44px

Use min, max, clamp; css funcitons

body text same size across all devices
headings may need to be shrunk
*/
@import "card.css";

:root {
  --gray-50: hsl(210deg, 25%, 96%);
  --gray-100: hsl(210deg, 25%, 88%);
  --gray-300: hsl(210deg, 14%, 66%);
  --gray-400: hsl(210deg, 12%, 55%);
  --gray-200: hsl(210deg, 20%, 77%);
  --gray-500: hsl(210deg, 8%, 50%);
  --gray-600: hsl(210deg, 9%, 45%);
  --gray-700: hsl(210deg, 10%, 40%);
  --gray-800: hsl(210deg, 15%, 25%);
  --gray-900: hsl(210deg, 15%, 20%);
  --gray-1000: hsl(210deg, 19%, 10%);
  
  --primary-50: #fef2f2;
  --primary-100: #fee2e2;
  --primary-200: #fecaca;
  --primary-300: #fca5a5;
  --primary-400: #f87171;
  --primary-500: #ef4444;
  --primary-600: #dc2626;
  --primary-700: #b91c1c;
  --primary-800: #991b1b;
  --primary-900: #7f1d1d;

  --secondary-50: #f0fdf4;
  --secondary-100: #dcfce7;
  --secondary-200: #d9f99d;
  --secondary-300: #bef264;
  --secondary-400: #4ade80;
  --secondary-500: #22c55e;
  --secondary-600: #16a34a;
  --secondary-700: #15803d;
  --secondary-800: #166534;
  --secondary-900: #064e3b;

  --primary1: #DE976B;
  --primary2: #FFCEA0;
  --primary3: #FFF8E6;

  --font18: calc(18rem / 16);

  --padding: ;

  --min-tap-height: 44px;
}
*, *::before, *::after {
  box-sizing: border-box;
}

* {
  margin: 0;
}

html, body {
  height: 100%;
}

body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}

img, picture, video, canvas, svg {
  display: block;
  max-width: 100%;
}

input, button, textarea, select {
  font: inherit;
}
h1, h2, h3, h4, h5, h6 {
  font-family: 'Bitter', serif;
}
p, a, span {
  font-family: 'Hind', sans-serif;
}

p, h1, h2, h3, h4, h5, h6 {
  overflow-wrap: break-word;
  font-size: var(--font18);
}

h1 {
    font-size: clamp(1.5rem, 6vw, 3rem);
}
h2 {
    font-size: clamp(1.5rem, 6vw, 3rem);
}

/* Try to only change media queries with css custom properties in the :root 

for example a bigger screen size will require more border radius and --spacing
*/
a {
  text-decoration: none;
}
.wrapper__line {
  background-color: var(--primary-400);
  height: 4px;
  position: sticky;
  z-index: 2;
  top: 0;
}
.wrapper__header {
  /* border-top: 5px solid var(--primary-400); */
}
.logoCtr {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: calc(12rem / 16) 0;
}
.logo {
  width: 50%;
}
.logoCtr__a {
  font-size: 2rem;
  font-family: 'Carter One';
  color: var(--primary-400);
  letter-spacing: 2px;
}
.logoCtr__a:hover,
.logoCtr__a:focus {
  color: var(--primary-500);
}
/* decided to not use menu yet */
.menu {
  display: grid;
  grid-auto-flow: column;
  list-style: none;
  color: var(--primary-400);
}
/*  */
.wishlist {
  border-radius: 50%;
  aspect-ratio: 1/1;
  width: 60px;
  background-color: hsl(0 93.3% 94.1% / .3);
  /* background-color: hsl(0 93.3% 94.1% / .5); */
  backdrop-filter: blur(4px);
  position: fixed;
  bottom: 20px;
  right: 15px;
  z-index: 1;
  display: flex;
  padding: 5px;
  border: 2px solid hsla(0 0% 50% / .8)
}
.wishlist:hover {
  background-color: hsla(140.6 84.2% 92.5% / .5);
}
/* the nav.ScrollCtr rule below has overflow-x: scroll creating a scroll context
to put absolute buttons that don't move I need them outside of a scroll context */
.noScrollContext {
  /* any position value, other than static, will be the containing block for the absolute positioned buttons */
  position: sticky;
  z-index: 1;
  top: 0px;
}
nav.scrollCtr {
  border-top: 1px solid hsl(0, 0%, 86%);
  background-color: var(--gray-50);
  /* backdrop-filter: blur(4px); */
  -webkit-backdrop-filter: blur(10px);
  display: flex;
  /* make sure the list categories words not wrap onto another line */
  white-space: nowrap;
  gap: 15px;
  padding: 1rem 10px;
  overflow-x: scroll;
}
.scrollAnchor {
  padding: 0 1rem;
  height: 40px;
  line-height: 40px;
  border-radius: 50px;
  transition: transform 250ms;
  position: relative;
  color: hsl(0, 0%, 10%);
  background-color: var(--gray-100);
  text-transform: capitalize;
}
.scrollAnchor::after {
  --tap-increment: -8px;
  content: '';
  position: absolute;
  top: var(--tap-increment);
  right: var(--tap-increment);
  left: var(--tap-increment);
  bottom: var(--tap-increment);
  /* My anchor was not being click instead the psuedo element was */
  pointer-events: none;
}
.scrollAnchor--active {
  background-color: var(--primary-400);
  color: white;
}
.scrollBtn {
  border-radius: 50px;
  border: 1px solid black;
  background-color: hsla(0 0% 100%);
  width: 20px;
  height: 20px;
  display: grid;
  place-content: center;
  cursor: pointer;
  transition: transform 250ms, opacity 500ms;
  position: absolute;
  /* Unlike flow layout, an absolute postioned element can do 'greedy' margin: auto; vertically.
  This makes sense because it must be in a logical container either relative or root */
  top: 0;
  bottom: 0;
  margin: auto;
  z-index: 1;
}
.scrollBtn--prev {
  left: 12px;
}
.scrollBtn--next {
  right: 12px;
}
.hide1 {
  opacity: 0;
  transform: translateX(-20px);
}
.hide2 {
  opacity: 0;
  transform: translateX(20px);
}
.show {
  opacity: 1;
  transform: translateY(0px);
}
.article {
  scroll-margin-top: 73px;
}
.article--top {
  padding: calc(50rem / 16) 0;
  /* css background i copied from josh comaeu */

}
.article__h1 {
  font-size: 1.8rem;
  text-align: center;
  padding: 0 6vw;
  text-transform: capitalize;
}
.article__summary {
  text-align: center;
  margin: 1rem
}
.article__date {
  display: block;
  margin-top: calc(20 / 16 * 1rem);
  text-align: center;
  color: hsl(0, 0%, 60%);
  font-size: .9rem;
}
.article__list {
  padding: 0;
  border-top: 1px solid hsl(0, 0%, 70%);
  margin: auto;
  max-width: 700px;
}
.article__list--li {
  list-style-type: none;
}

@media (min-width: calc(550 / 16 * 1rem)) {
/* Tablets */
  .wrapper {
    max-width: 700px;
    margin: auto;
  }
}
@media (min-width: calc(865/ 16 * 1rem)) {
  /* custom media query for fixed positioned bookmark button */
  .wishlist {
    bottom: 65%;
  }
}

@media (min-width: calc(1100 / 16 * 1rem)) {
/* Laptop */
}

@media (min-width: calc(1500 / 16 * 1rem)) {
/* Desktop */
}
@media (pointer: coarse) {
    /* touch screen */
    button, input {
        min-height: var(--min-tap-height);
    }
}
@media (hover: hover) and (pointer: fine) {
/* Hover effects for mouse */  
}

/* Routing Magic with html/css only */
.article {
  display: none;
}
.article--first {
  display: block;
}
.article:target {
  display: block;
}
